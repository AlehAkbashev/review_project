# Generated by Django 3.2 on 2023-11-05 22:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import reviews.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=256, verbose_name="category_name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Slug doesn't correct",
                                regex="^[-a-zA-Z0-9_]+$",
                            )
                        ],
                        verbose_name="category_slug",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="comment_text")),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="comment_pub_date"
                    ),
                ),
            ],
            options={
                "verbose_name": "Комментарий",
                "verbose_name_plural": "Комментарии",
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=256, verbose_name="category_name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Slug doesn't correct",
                                regex="^[-a-zA-Z0-9_]+$",
                            )
                        ],
                        verbose_name="category_slug",
                    ),
                ),
            ],
            options={
                "verbose_name": "Жанр",
                "verbose_name_plural": "Жанры",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        max_length=256, verbose_name="review_text"
                    ),
                ),
                (
                    "score",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                        ],
                        verbose_name="review_score",
                    ),
                ),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="review_pub_date"
                    ),
                ),
            ],
            options={
                "verbose_name": "Ревью",
                "verbose_name_plural": "Ревью",
            },
        ),
        migrations.CreateModel(
            name="Title",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=256, verbose_name="title_name"
                    ),
                ),
                (
                    "year",
                    models.PositiveSmallIntegerField(
                        validators=[reviews.validators.validate_year],
                        verbose_name="title_year",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, verbose_name="title_description"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="categories",
                        to="reviews.category",
                        verbose_name="title_categories",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заголовок",
                "verbose_name_plural": "Заголовки",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="TitleGenre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "genre_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="genre_genres",
                        to="reviews.genre",
                        verbose_name="title_genres",
                    ),
                ),
                (
                    "title_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="titles_titles",
                        to="reviews.title",
                        verbose_name="title_titles",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="title",
            name="genre",
            field=models.ManyToManyField(
                related_name="genre",
                through="reviews.TitleGenre",
                to="reviews.Genre",
                verbose_name="title_genres",
            ),
        ),
    ]
